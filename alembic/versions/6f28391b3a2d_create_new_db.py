"""Create new DB.

Revision ID: 6f28391b3a2d
Revises:
Create Date: 2023-05-21 13:10:17.082344

"""
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = "6f28391b3a2d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "integrations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_integrations")),
    )
    with op.batch_alter_table("integrations", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_integrations_id"), ["id"], unique=False)
        batch_op.create_index(batch_op.f("ix_integrations_token"), ["token"], unique=True)

    op.create_table(
        "tables",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("table_id", sa.String(), nullable=True),
        sa.Column("integration_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["integration_id"], ["integrations.id"], name=op.f("fk_tables_integration_id_integrations")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tables")),
    )
    with op.batch_alter_table("tables", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_tables_id"), ["id"], unique=False)
        batch_op.create_index(batch_op.f("ix_tables_table_id"), ["table_id"], unique=False)

    op.create_table(
        "elements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=True),
        sa.Column("notion_id", sa.String(), nullable=True),
        sa.Column("table_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["table_id"], ["tables.id"], name=op.f("fk_elements_table_id_tables")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_elements")),
    )
    with op.batch_alter_table("elements", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_elements_id"), ["id"], unique=False)
        batch_op.create_index(batch_op.f("ix_elements_notion_id"), ["notion_id"], unique=True)

    op.create_table(
        "attributes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("value_bool", sa.Boolean(), nullable=True),
        sa.Column("value_date", sa.DateTime(), nullable=True),
        sa.Column("value_number", sa.Float(), nullable=True),
        sa.Column("value_string", sa.String(), nullable=True),
        sa.Column("is_bool", sa.Boolean(), nullable=True),
        sa.Column("is_date", sa.Boolean(), nullable=True),
        sa.Column("is_number", sa.Boolean(), nullable=True),
        sa.Column("is_string", sa.Boolean(), nullable=True),
        sa.Column("is_multistring", sa.Boolean(), nullable=True),
        sa.Column("element_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["element_id"], ["elements.id"], name=op.f("fk_attributes_element_id_elements"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_attributes")),
    )
    with op.batch_alter_table("attributes", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_attributes_id"), ["id"], unique=False)

    op.create_table(
        "stringparts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(), nullable=True),
        sa.Column("attribute_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["attribute_id"],
            ["attributes.id"],
            name=op.f("fk_stringparts_attribute_id_attributes"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_stringparts")),
    )
    with op.batch_alter_table("stringparts", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_stringparts_id"), ["id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("stringparts", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_stringparts_id"))

    op.drop_table("stringparts")
    with op.batch_alter_table("attributes", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_attributes_id"))

    op.drop_table("attributes")
    with op.batch_alter_table("elements", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_elements_notion_id"))
        batch_op.drop_index(batch_op.f("ix_elements_id"))

    op.drop_table("elements")
    with op.batch_alter_table("tables", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_tables_table_id"))
        batch_op.drop_index(batch_op.f("ix_tables_id"))

    op.drop_table("tables")
    with op.batch_alter_table("integrations", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_integrations_token"))
        batch_op.drop_index(batch_op.f("ix_integrations_id"))

    op.drop_table("integrations")
    # ### end Alembic commands ###
