"""Database creation

Revision ID: bcd270175818
Revises:
Create Date: 2023-05-10 00:17:37.488262

"""
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = "bcd270175818"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "integrations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_integrations")),
    )
    with op.batch_alter_table("integrations", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_integrations_id"), ["id"], unique=False)
        batch_op.create_index(batch_op.f("ix_integrations_token"), ["token"], unique=True)

    op.create_table(
        "tables",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("table_id", sa.String(), nullable=True),
        sa.Column("integration_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["integration_id"], ["integrations.id"], name=op.f("fk_tables_integration_id_integrations")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tables")),
    )
    with op.batch_alter_table("tables", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_tables_id"), ["id"], unique=False)
        batch_op.create_index(batch_op.f("ix_tables_table_id"), ["table_id"], unique=False)

    op.create_table(
        "elements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=True),
        sa.Column("notion_id", sa.String(), nullable=True),
        sa.Column("table_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["table_id"], ["tables.id"], name=op.f("fk_elements_table_id_tables")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_elements")),
    )
    with op.batch_alter_table("elements", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_elements_id"), ["id"], unique=False)
        batch_op.create_index(batch_op.f("ix_elements_notion_id"), ["notion_id"], unique=True)

    op.create_table(
        "booleans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("value", sa.Boolean(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("element_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["element_id"], ["elements.id"], name=op.f("fk_booleans_element_id_elements")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_booleans")),
    )
    with op.batch_alter_table("booleans", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_booleans_id"), ["id"], unique=False)

    op.create_table(
        "dates",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("value", sa.DateTime(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("element_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["element_id"], ["elements.id"], name=op.f("fk_dates_element_id_elements")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_dates")),
    )
    with op.batch_alter_table("dates", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_dates_id"), ["id"], unique=False)

    op.create_table(
        "multis",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("element_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["element_id"], ["elements.id"], name=op.f("fk_multis_element_id_elements")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_multis")),
    )
    with op.batch_alter_table("multis", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_multis_id"), ["id"], unique=False)

    op.create_table(
        "numbers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("value", sa.Float(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("element_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["element_id"], ["elements.id"], name=op.f("fk_numbers_element_id_elements")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_numbers")),
    )
    with op.batch_alter_table("numbers", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_numbers_id"), ["id"], unique=False)

    op.create_table(
        "strings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("element_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["element_id"], ["elements.id"], name=op.f("fk_strings_element_id_elements")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_strings")),
    )
    with op.batch_alter_table("strings", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_strings_id"), ["id"], unique=False)

    op.create_table(
        "stringparts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(), nullable=True),
        sa.Column("multiattribute_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["multiattribute_id"],
            ["multis.id"],
            name=op.f("fk_stringparts_multiattribute_id_multis"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_stringparts")),
    )
    with op.batch_alter_table("stringparts", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_stringparts_id"), ["id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("stringparts", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_stringparts_id"))

    op.drop_table("stringparts")
    with op.batch_alter_table("strings", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_strings_id"))

    op.drop_table("strings")
    with op.batch_alter_table("numbers", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_numbers_id"))

    op.drop_table("numbers")
    with op.batch_alter_table("multis", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_multis_id"))

    op.drop_table("multis")
    with op.batch_alter_table("dates", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_dates_id"))

    op.drop_table("dates")
    with op.batch_alter_table("booleans", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_booleans_id"))

    op.drop_table("booleans")
    with op.batch_alter_table("elements", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_elements_notion_id"))
        batch_op.drop_index(batch_op.f("ix_elements_id"))

    op.drop_table("elements")
    with op.batch_alter_table("tables", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_tables_table_id"))
        batch_op.drop_index(batch_op.f("ix_tables_id"))

    op.drop_table("tables")
    with op.batch_alter_table("integrations", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_integrations_token"))
        batch_op.drop_index(batch_op.f("ix_integrations_id"))

    op.drop_table("integrations")
    # ### end Alembic commands ###
